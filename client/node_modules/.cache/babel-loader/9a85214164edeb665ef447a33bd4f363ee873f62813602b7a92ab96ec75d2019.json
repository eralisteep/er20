{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\butabayev.yerali\\\\Documents\\\\GitHub\\\\er17\\\\client\\\\src\\\\components\\\\modals\\\\GetResults.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Modal, Dropdown, Button, Row } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Context } from '../..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetResults = ({\n  show,\n  onHide\n}) => {\n  _s();\n  const [results, setResults] = useState([]);\n  const {\n    device\n  } = useContext(Context);\n  const [info, setInfo] = useState([]);\n  useEffect(() => {\n    let integer = device.selectedDevice.id;\n    axios.get(`${process.env.REACT_APP_API_URL}api/testResult/${integer}`).then(response => {\n      setResults(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the survey results!', error);\n    });\n  }, [device.devices]); // Добавляем зависимость от device.devices\n\n  const getResult = () => {\n    console.log(results); // Log the results to check its structure\n\n    // Make sure the fields exist in the results object before trying to access them\n    if (results && results.title && results.description1) {\n      setInfo([...info, {\n        title: results.title || \"No Title\",\n        description1: results.description1 || \"No Description\",\n        description2: results.description2 || \"No Description\",\n        description3: results.description3 || \"No Description\",\n        description4: results.description4 || \"No Description\",\n        number: Date.now()\n      }]);\n    } else {\n      console.error(\"Required fields are missing in results.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Survey Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      className: \"mt-2 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        children: device.selectedDevice.name || \"Выберите опрос\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: Array.isArray(device.devices) && device.devices.map(deviceItem => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => device.setSelectedDevice(deviceItem),\n          children: deviceItem.name\n        }, deviceItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: getResult,\n        children: \"\\u041F\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), info.map(i => /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2 mb-2\",\n      children: [i.title, i.description1, i.description2, i.description3, i.description4]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GetResults, \"ihHdqQVyzyhbpoEZ90FHfoat1DM=\");\n_c = GetResults;\nexport default GetResults;\nvar _c;\n$RefreshReg$(_c, \"GetResults\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Modal","Dropdown","Button","Row","axios","Context","jsxDEV","_jsxDEV","GetResults","show","onHide","_s","results","setResults","device","info","setInfo","integer","selectedDevice","id","get","process","env","REACT_APP_API_URL","then","response","data","catch","error","console","devices","getResult","log","title","description1","description2","description3","description4","number","Date","now","centered","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Toggle","name","Menu","Array","isArray","map","deviceItem","Item","onClick","setSelectedDevice","Footer","variant","i","_c","$RefreshReg$"],"sources":["C:/Users/butabayev.yerali/Documents/GitHub/er17/client/src/components/modals/GetResults.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Modal, Dropdown, Button, Row } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { Context } from '../..';\r\n\r\nconst GetResults = ({ show, onHide }) => {\r\n  const [results, setResults] = useState([]);\r\n  const { device } = useContext(Context);\r\n  const [info, setInfo] = useState([])\r\n  \r\n  useEffect(() => {\r\n    let integer = device.selectedDevice.id\r\n    axios.get(`${process.env.REACT_APP_API_URL}api/testResult/${integer}`)\r\n      .then(response => {\r\n        setResults(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error fetching the survey results!', error);\r\n      });\r\n  }, [device.devices]); // Добавляем зависимость от device.devices\r\n\r\n  const getResult = () => {\r\n    console.log(results); // Log the results to check its structure\r\n  \r\n    // Make sure the fields exist in the results object before trying to access them\r\n    if (results && results.title && results.description1) {\r\n      setInfo([\r\n        ...info,\r\n        {\r\n          title: results.title || \"No Title\",\r\n          description1: results.description1 || \"No Description\",\r\n          description2: results.description2 || \"No Description\",\r\n          description3: results.description3 || \"No Description\",\r\n          description4: results.description4 || \"No Description\",\r\n          number: Date.now(),\r\n        }\r\n      ]);\r\n    } else {\r\n      console.error(\"Required fields are missing in results.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      centered\r\n    >\r\n      <h2>Survey Results</h2>\r\n      <Dropdown className=\"mt-2 mb-2\">\r\n        <Dropdown.Toggle>{device.selectedDevice.name || \"Выберите опрос\"}</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {Array.isArray(device.devices) && device.devices.map(deviceItem =>\r\n            <Dropdown.Item\r\n              onClick={() => device.setSelectedDevice(deviceItem)}\r\n              key={deviceItem.id}\r\n            >\r\n              {deviceItem.name}\r\n            </Dropdown.Item>\r\n          )}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n        <Button variant=\"outline-success\" onClick={getResult}>Посмотреть</Button>\r\n      </Modal.Footer>\r\n        {info.map(i =>\r\n          <Row className=\"mt-2 mb-2\">\r\n              {i.title}\r\n              {i.description1}\r\n              {i.description2}\r\n              {i.description3}\r\n              {i.description4}\r\n          </Row>\r\n        )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GetResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}