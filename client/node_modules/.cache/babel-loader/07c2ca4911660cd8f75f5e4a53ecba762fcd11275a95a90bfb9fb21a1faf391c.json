{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar propTypes = {\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\n  id: PropTypes.any,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables the toggle NavLink  */\n  disabled: PropTypes.bool,\n  /** Style the toggle NavLink as active  */\n  active: PropTypes.bool,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\n  rootCloseEvent: PropTypes.string,\n  /** @ignore */\n  bsPrefix: PropTypes.string\n};\nvar NavDropdown = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    children = _ref.children,\n    bsPrefix = _ref.bsPrefix,\n    rootCloseEvent = _ref.rootCloseEvent,\n    menuRole = _ref.menuRole,\n    disabled = _ref.disabled,\n    active = _ref.active,\n    renderMenuOnMount = _ref.renderMenuOnMount,\n    props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\", \"renderMenuOnMount\"]);\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: NavItem\n  }), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    id: id,\n    eventKey: null,\n    active: active,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    as: NavLink\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nNavDropdown.displayName = 'NavDropdown';\nNavDropdown.propTypes = propTypes;\nNavDropdown.Item = Dropdown.Item;\nNavDropdown.ItemText = Dropdown.ItemText;\nNavDropdown.Divider = Dropdown.Divider;\nNavDropdown.Header = Dropdown.Header;\nexport default NavDropdown;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Dropdown","NavItem","NavLink","propTypes","id","any","onClick","func","title","node","isRequired","disabled","bool","active","menuRole","string","renderMenuOnMount","rootCloseEvent","bsPrefix","NavDropdown","forwardRef","_ref","ref","children","props","createElement","as","Toggle","eventKey","childBsPrefix","Menu","role","renderOnMount","displayName","Item","ItemText","Divider","Header"],"sources":["C:/Users/butabayev.yerali/Documents/GitHub/er17/client/node_modules/react-bootstrap/esm/NavDropdown.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dropdown from './Dropdown';\r\nimport NavItem from './NavItem';\r\nimport NavLink from './NavLink';\r\nvar propTypes = {\r\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\r\n  id: PropTypes.any,\r\n\r\n  /** An `onClick` handler passed to the Toggle component */\r\n  onClick: PropTypes.func,\r\n\r\n  /** The content of the non-toggle Button.  */\r\n  title: PropTypes.node.isRequired,\r\n\r\n  /** Disables the toggle NavLink  */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** Style the toggle NavLink as active  */\r\n  active: PropTypes.bool,\r\n\r\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\r\n  menuRole: PropTypes.string,\r\n\r\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\r\n  renderMenuOnMount: PropTypes.bool,\r\n\r\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\r\n  rootCloseEvent: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  bsPrefix: PropTypes.string\r\n};\r\nvar NavDropdown = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\r\n  var id = _ref.id,\r\n      title = _ref.title,\r\n      children = _ref.children,\r\n      bsPrefix = _ref.bsPrefix,\r\n      rootCloseEvent = _ref.rootCloseEvent,\r\n      menuRole = _ref.menuRole,\r\n      disabled = _ref.disabled,\r\n      active = _ref.active,\r\n      renderMenuOnMount = _ref.renderMenuOnMount,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\", \"renderMenuOnMount\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    as: NavItem\r\n  }), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\r\n    id: id,\r\n    eventKey: null,\r\n    active: active,\r\n    disabled: disabled,\r\n    childBsPrefix: bsPrefix,\r\n    as: NavLink\r\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Menu, {\r\n    role: menuRole,\r\n    renderOnMount: renderMenuOnMount,\r\n    rootCloseEvent: rootCloseEvent\r\n  }, children));\r\n});\r\nNavDropdown.displayName = 'NavDropdown';\r\nNavDropdown.propTypes = propTypes;\r\nNavDropdown.Item = Dropdown.Item;\r\nNavDropdown.ItemText = Dropdown.ItemText;\r\nNavDropdown.Divider = Dropdown.Divider;\r\nNavDropdown.Header = Dropdown.Header;\r\nexport default NavDropdown;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,IAAIC,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;EACEC,EAAE,EAAEL,SAAS,CAACM,GAAG;EAEjB;EACAC,OAAO,EAAEP,SAAS,CAACQ,IAAI;EAEvB;EACAC,KAAK,EAAET,SAAS,CAACU,IAAI,CAACC,UAAU;EAEhC;EACAC,QAAQ,EAAEZ,SAAS,CAACa,IAAI;EAExB;EACAC,MAAM,EAAEd,SAAS,CAACa,IAAI;EAEtB;EACAE,QAAQ,EAAEf,SAAS,CAACgB,MAAM;EAE1B;EACAC,iBAAiB,EAAEjB,SAAS,CAACa,IAAI;EAEjC;AACF;AACA;AACA;AACA;EACEK,cAAc,EAAElB,SAAS,CAACgB,MAAM;EAEhC;EACAG,QAAQ,EAAEnB,SAAS,CAACgB;AACtB,CAAC;AACD,IAAII,WAAW,GAAG,aAAarB,KAAK,CAACsB,UAAU,CAAC,UAAUC,IAAI,EAAEC,GAAG,EAAE;EACnE,IAAIlB,EAAE,GAAGiB,IAAI,CAACjB,EAAE;IACZI,KAAK,GAAGa,IAAI,CAACb,KAAK;IAClBe,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IACxBL,QAAQ,GAAGG,IAAI,CAACH,QAAQ;IACxBD,cAAc,GAAGI,IAAI,CAACJ,cAAc;IACpCH,QAAQ,GAAGO,IAAI,CAACP,QAAQ;IACxBH,QAAQ,GAAGU,IAAI,CAACV,QAAQ;IACxBE,MAAM,GAAGQ,IAAI,CAACR,MAAM;IACpBG,iBAAiB,GAAGK,IAAI,CAACL,iBAAiB;IAC1CQ,KAAK,GAAG3B,6BAA6B,CAACwB,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC;EAEjK,OAAO,aAAavB,KAAK,CAAC2B,aAAa,CAACzB,QAAQ,EAAEJ,QAAQ,CAAC;IACzD0B,GAAG,EAAEA;EACP,CAAC,EAAEE,KAAK,EAAE;IACRE,EAAE,EAAEzB;EACN,CAAC,CAAC,EAAE,aAAaH,KAAK,CAAC2B,aAAa,CAACzB,QAAQ,CAAC2B,MAAM,EAAE;IACpDvB,EAAE,EAAEA,EAAE;IACNwB,QAAQ,EAAE,IAAI;IACdf,MAAM,EAAEA,MAAM;IACdF,QAAQ,EAAEA,QAAQ;IAClBkB,aAAa,EAAEX,QAAQ;IACvBQ,EAAE,EAAExB;EACN,CAAC,EAAEM,KAAK,CAAC,EAAE,aAAaV,KAAK,CAAC2B,aAAa,CAACzB,QAAQ,CAAC8B,IAAI,EAAE;IACzDC,IAAI,EAAEjB,QAAQ;IACdkB,aAAa,EAAEhB,iBAAiB;IAChCC,cAAc,EAAEA;EAClB,CAAC,EAAEM,QAAQ,CAAC,CAAC;AACf,CAAC,CAAC;AACFJ,WAAW,CAACc,WAAW,GAAG,aAAa;AACvCd,WAAW,CAAChB,SAAS,GAAGA,SAAS;AACjCgB,WAAW,CAACe,IAAI,GAAGlC,QAAQ,CAACkC,IAAI;AAChCf,WAAW,CAACgB,QAAQ,GAAGnC,QAAQ,CAACmC,QAAQ;AACxChB,WAAW,CAACiB,OAAO,GAAGpC,QAAQ,CAACoC,OAAO;AACtCjB,WAAW,CAACkB,MAAM,GAAGrC,QAAQ,CAACqC,MAAM;AACpC,eAAelB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}